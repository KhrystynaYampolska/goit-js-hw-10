{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nconst startButton = document.querySelector('[data-start]');\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        color: 'red',\n      });\n      userSelectedDate = null;\n    } else {\n      userSelectedDate = selectedDates[0];\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst updateTimerDisplay = timeDifference => {\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n};\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartButton.addEventListener('click', () => {\n  if (!userSelectedDate) {\n    return;\n  }\n\n  document.querySelector('#datetime-picker').disabled = true;\n\n  const intervalId = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(intervalId);\n      iziToast.show({\n        message: 'Time is up!',\n        position: 'topRight',\n        color: 'red',\n      });\n      document.querySelector('#datetime-picker').disabled = false;\n    } else {\n      updateTimerDisplay(timeDifference);\n    }\n  }, 1000);\n});\n"],"names":["userSelectedDate","startButton","options","selectedDates","iziToast","flatpickr","updateTimerDisplay","timeDifference","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms","intervalId"],"mappings":"iFAQA,IAAIA,EACJ,MAAMC,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,GAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzBC,EAAS,KAAK,CACZ,QAAS,qCACT,SAAU,WACV,MAAO,KACf,CAAO,EACDJ,EAAmB,OAEnBA,EAAmBG,EAAc,CAAC,EAClCF,EAAY,SAAW,GAE1B,CACH,EAEAI,EAAU,mBAAoBH,CAAO,EAErC,MAAMI,EAAqBC,GAAkB,CAC3C,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAElE,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCI,EAAeH,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,CAC1B,EAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAOK,EAAK,KAAQ,GAAM,EACzCJ,EAAU,KAAK,MAAOI,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAV,EAAY,iBAAiB,QAAS,IAAM,CAC1C,GAAI,CAACD,EACH,OAGF,SAAS,cAAc,kBAAkB,EAAE,SAAW,GAEtD,MAAMgB,EAAa,YAAY,IAAM,CAEnC,MAAMT,EAAiBP,EADH,IAAI,KAGpBO,GAAkB,GACpB,cAAcS,CAAU,EACxBZ,EAAS,KAAK,CACZ,QAAS,cACT,SAAU,WACV,MAAO,KACf,CAAO,EACD,SAAS,cAAc,kBAAkB,EAAE,SAAW,IAEtDE,EAAmBC,CAAc,CAEpC,EAAE,GAAI,CACT,CAAC"}